import { Directive, ElementRef, Input, HostBinding, Inject } from '@angular/core';
var DragScrollItemDirective = (function () {
    function DragScrollItemDirective(elementRef) {
        this.elementRef = elementRef;
        this.display = 'inline-block';
        this._dragDisabled = false;
        this._elementRef = elementRef;
    }
    Object.defineProperty(DragScrollItemDirective.prototype, "dragDisabled", {
        get: function () { return this._dragDisabled; },
        set: function (value) { this._dragDisabled = value; },
        enumerable: true,
        configurable: true
    });
    DragScrollItemDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[drag-scroll-item]'
                },] },
    ];
    DragScrollItemDirective.ctorParameters = function () { return [
        { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] }
    ]; };
    DragScrollItemDirective.propDecorators = {
        display: [{ type: HostBinding, args: ['style.display',] }],
        dragDisabled: [{ type: Input, args: ['drag-disabled',] }]
    };
    return DragScrollItemDirective;
}());
export { DragScrollItemDirective };
if (false) {
    DragScrollItemDirective.prototype.display;
    DragScrollItemDirective.prototype._dragDisabled;
    DragScrollItemDirective.prototype._elementRef;
    DragScrollItemDirective.prototype.elementRef;
}
//# sourceMappingURL=ngx-drag-scroll-item.js.map